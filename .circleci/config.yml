#
# Copyright (C) 2022 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: 2.1

orbs:
  win: circleci/windows@2.0.0

executors:
  linux-aarch64:
    machine:
      image: ubuntu-2204:current
      resource_class: arm.medium
    working_directory: ~/typedb-driver-java

  linux-x86_64:
    machine:
      image: ubuntu-2204:current
    working_directory: ~/typedb-driver-java

  mac-aarch64:
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-driver-java

  mac-x86_64:
    macos:
      xcode: "14.2.0"
    working_directory: ~/typedb-driver-java

commands:
  install-bazel-linux:
    parameters:
      arch:
        type: string
    steps:
      - run: |
          curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-<<parameters.arch>>"
          sudo mv "bazelisk-linux-<<parameters.arch>>" /usr/local/bin/bazel
          chmod a+x /usr/local/bin/bazel

  install-bazel-mac:
    steps:
      - run: brew install bazelisk

  install-pip-requirements:
    steps:
      - run: |
          python3 -m pip install pip==23.2.1
          python3 -m pip install -r python/requirements_dev.txt

  install-maven-mac:
    steps:
      - run: brew install maven

  deploy-pip-release-unix:
    steps:
      - run: |
          export DEPLOY_PIP_USERNAME=$REPO_PYPI_USERNAME
          export DEPLOY_PIP_PASSWORD=$REPO_PYPI_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip39 -- release
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip310 -- release
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip311 -- release
          mkdir -p ~/dist
          cp bazel-bin/python/typedb-client*.whl ~/dist/.

  deploy-pip-release-mac:
    steps:
      - checkout
      - install-bazel-mac
      - install-pip-requirements
      - deploy-pip-release-unix

  deploy-pip-release-linux:
    parameters:
      arch:
        type: string
    steps:
      - checkout
      - install-bazel-linux:
          arch: "<<parameters.arch>>"
      - install-pip-requirements
      - deploy-pip-release-unix

  deploy-pip-snapshot-unix:
    steps:
      - run: |
          export DEPLOY_PIP_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_PIP_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip39 -- snapshot
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip310 -- snapshot
          bazel run --define version=$(git rev-parse HEAD) //python:deploy-pip311 -- snapshot

  deploy-pip-snapshot-mac:
    steps:
      - checkout
      - install-bazel-mac
      - install-pip-requirements
      - deploy-pip-snapshot-unix

  deploy-pip-snapshot-linux:
    parameters:
      arch:
        type: string
    steps:
      - checkout
      - install-bazel-linux:
          arch: "<<parameters.arch>>"
      - install-pip-requirements
      - deploy-pip-snapshot-unix

  test-pip-snapshot-unix:
    steps:
      - run: |
          bazel run //tool/test:typedb-extractor -- typedb-all
          ./typedb-all/typedb server &
          python3 -m pip install wheel
          python3 -m pip install --extra-index-url https://repo.vaticle.com/repository/pypi-snapshot/simple typedb-client==0.0.0+$(git rev-parse HEAD)
          cd python/tests/deployment/ && python3 -m unittest test && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
          kill $(jps | awk '/TypeDBServer/ {print $1}')
          exit $TEST_SUCCESS

  test-pip-snapshot-mac:
    steps:
      - checkout
      - install-bazel-mac
      - install-pip-requirements
      - test-pip-snapshot-unix

  test-pip-snapshot-linux:
    parameters:
      arch:
        type: string
    steps:
      - checkout
      - install-bazel-linux:
          arch: "<<parameters.arch>>"
      - install-pip-requirements
      - test-pip-snapshot-unix

  deploy-maven-jni-unix:
    steps:
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //java:deploy-maven-jni -- snapshot

  deploy-maven-central-unix:
    steps:
      - run: |
          export DEPLOY_MAVEN_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_MAVEN_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //java:deploy-maven -- snapshot

  test-maven-deployment-unix:
    steps:
      - run: |
          export REPO_DIR="/home/factory/$CIRCLE_PROJECT_REPONAME/"
          export TYPEDB_DIST_DIR="dist/typedb-all-linux/"
          bazel run //java/test:typedb-extractor-linux -- $TYPEDB_DIST_DIR
          $TYPEDB_DIST_DIR/typedb server &
          PID=$!
          
          sed -i -e "s/CLIENT_JAVA_VERSION_MARKER/$CIRCLE_SHA1/g" java/test/deployment/pom.xml
          cat java/test/deployment/pom.xml
          cd java/test/deployment && mvn test
          kill $PID

jobs:
  deploy-pip-snapshot-linux-aarch64:
    executor: linux-aarch64
    steps:
      - deploy-pip-snapshot-linux:
          arch: arm64

  deploy-pip-snapshot-linux-x86_64:
    executor: linux-x86_64
    steps:
      - deploy-pip-snapshot-linux:
          arch: amd64

  deploy-pip-snapshot-mac-aarch64:
    executor: mac-aarch64
    steps:
      - deploy-pip-snapshot-mac

  deploy-pip-snapshot-mac-x86_64:
    executor: mac-x86_64
    steps:
      - deploy-pip-snapshot-mac

  deploy-pip-snapshot-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\python\deploy_snapshot.bat

  test-pip-snapshot-linux-aarch64:
    executor: linux-aarch64
    steps:
      - test-pip-snapshot-linux:
          arch: arm64

  test-pip-snapshot-linux-x86_64:
    executor: linux-x86_64
    steps:
      - test-pip-snapshot-linux:
          arch: amd64

  test-pip-snapshot-mac-aarch64:
    executor: mac-aarch64
    steps:
      - test-pip-snapshot-mac

  test-pip-snapshot-mac-x86_64:
    executor: mac-x86_64
    steps:
      - test-pip-snapshot-mac

  test-pip-snapshot-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\python\test_deploy_snapshot.bat

  deploy-pip-release-linux-aarch64:
    executor: linux-aarch64
    steps:
      - deploy-pip-release-linux:
          arch: arm64
      - run: |
          mkdir -p ~/dist
          for f in bazel-bin/python/*.whl; do
              fname=$(basename $f)
              base=${fname%.*}
              pyversion=${base#typedb-client}
              cp $f ~/dist/typedb_client-py${pyversion}-none-linux_aarch64.whl
          done
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-pip-release-linux-x86_64:
    executor: linux-x86_64
    steps:
      - deploy-pip-release-linux:
          arch: amd64
      - run: |
          mkdir -p ~/dist
          for f in bazel-bin/python/*.whl; do
              fname=$(basename $f)
              base=${fname%.*}
              pyversion=${base#typedb-client}
              cp $f ~/dist/typedb_client-py${pyversion}-none-linux_x86_64.whl
          done
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-pip-release-mac-aarch64:
    executor: mac-aarch64
    steps:
      - deploy-pip-release-mac
      - run: |
          mkdir -p ~/dist
          for f in bazel-bin/python/*.whl; do
              fname=$(basename $f)
              base=${fname%.*}
              pyversion=${base#typedb-client}
              cp $f ~/dist/typedb_client-py${pyversion}-none-macosx_11_0_arm64.whl
          done
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-pip-release-mac-x86_64:
    executor: mac-x86_64
    steps:
      - deploy-pip-release-mac
      - run: |
          mkdir -p ~/dist
          for f in bazel-bin/python/*.whl; do
              fname=$(basename $f)
              base=${fname%.*}
              pyversion=${base#typedb-client}
              cp $f ~/dist/typedb_client-py${pyversion}-none-macosx_11_0_x86_64.whl
          done
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-pip-release-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\python\deploy_release.bat
      - persist_to_workspace:
          root: dist
          paths: ["./*"]

  deploy-github:
    executor: linux-x86_64
    steps:
      - attach_workspace:
          at: ~/dist
      - checkout
      - install-bazel-linux:
          arch: amd64
      - run:
          name: "Publish Draft Release on GitHub"
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz
            tar -xf ghr_v0.12.1_linux_amd64.tar.gz
            ghr_v0.12.1_linux_amd64/ghr -t ${REPO_GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} -n "TypeDB Driver $(cat VERSION)" -b "$(cat ./RELEASE_TEMPLATE.md)" \
              -c ${CIRCLE_SHA1} -delete -draft $(cat VERSION) ~/dist/

  deploy-maven-central:
    machine:
      image: ubuntu-2204:current
      resource_class: medium
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - deploy-maven-central-unix

  deploy-maven-mac-x86_64:
    macos:
      xcode: "14.2.0"
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-mac
      - deploy-maven-jni-unix

  deploy-maven-mac-arm64:
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-mac
      - deploy-maven-jni-unix

  deploy-maven-linux-x86_64:
    machine:
      image: ubuntu-2204:current
      resource_class: medium
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - deploy-maven-jni-unix

  deploy-maven-linux-arm64:
    machine:
      image: ubuntu-2204:current
      resource_class: arm.medium
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-linux:
          arch: arm64
      - deploy-maven-jni-unix

  deploy-maven-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deploy_jni_maven.bat

  test-maven-deployment-mac-x86_64:
    macos:
      xcode: "14.2.0"
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-mac
      - install-maven-mac
      - test-maven-deployment-unix

  test-maven-deployment-mac-arm64:
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-mac
      - install-maven-mac
      - test-maven-deployment-unix

  test-maven-deployment-linux-x86_64:
    machine:
      image: ubuntu-2204:current
      resource_class: medium
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - test-maven-deployment-unix

  test-maven-deployment-linux-arm64:
    machine:
      image: ubuntu-2204:current
      resource_class: arm.medium
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - install-bazel-linux:
          arch: arm64
      - test-maven-deployment-unix


  test-maven-deployment-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver-java
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deployment_test.bat

workflows:
  typedb-driver-python:
    jobs:
      - deploy-pip-snapshot-linux-aarch64:
          filters:
            branches:
              only: [master, development]
      - deploy-pip-snapshot-linux-x86_64:
          filters:
            branches:
              only: [master, development]
      - deploy-pip-snapshot-mac-aarch64:
          filters:
            branches:
              only: [master, development]
      - deploy-pip-snapshot-mac-x86_64:
          filters:
            branches:
              only: [master, development]
      - deploy-pip-snapshot-windows-x86_64:
          filters:
            branches:
              only: [master, development]

      - test-pip-snapshot-linux-aarch64:
          filters:
            branches:
              only: [master, development]
          requires:
            - deploy-pip-snapshot-linux-aarch64
      - test-pip-snapshot-linux-x86_64:
          filters:
            branches:
              only: [master, development]
          requires:
            - deploy-pip-snapshot-linux-x86_64
      - test-pip-snapshot-mac-aarch64:
          filters:
            branches:
              only: [master, development]
          requires:
            - deploy-pip-snapshot-mac-aarch64
      - test-pip-snapshot-mac-x86_64:
          filters:
            branches:
              only: [master, development]
          requires:
            - deploy-pip-snapshot-mac-x86_64
      - test-pip-snapshot-windows-x86_64:
          filters:
            branches:
              only: [master, development]
          requires:
            - deploy-pip-snapshot-windows-x86_64

  typedb-driver-java:
    jobs:
      - deploy-maven-mac-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
      - deploy-maven-mac-arm64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
      - deploy-maven-linux-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
      - deploy-maven-linux-arm64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
      - deploy-maven-windows-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
      - deploy-maven-central:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-mac-x86_64
            - deploy-maven-mac-arm64
            - deploy-maven-linux-x86_64
            - deploy-maven-linux-arm64
            - deploy-maven-windows-x86_64

      - test-maven-deployment-mac-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-central
      - test-maven-deployment-mac-arm64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-central
      - test-maven-deployment-linux-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-central
      - test-maven-deployment-linux-arm64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-central
      - test-maven-deployment-windows-x86_64:
          filters:
            branches:
              only:
                - master
                - development
                - maven
          requires:
            - deploy-maven-central

  release:
    jobs:
      - deploy-pip-release-linux-aarch64:
          filters:
            branches:
              only: [release]
      - deploy-pip-release-linux-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-pip-release-mac-aarch64:
          filters:
            branches:
              only: [release]
      - deploy-pip-release-mac-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-pip-release-windows-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-github:
          filters:
            branches:
              only: [release]
          requires:
            - deploy-pip-release-mac-aarch64
            - deploy-pip-release-mac-x86_64
            - deploy-pip-release-linux-aarch64
            - deploy-pip-release-linux-x86_64
            - deploy-pip-release-windows-x86_64
